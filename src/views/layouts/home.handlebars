
Memoria actualizada
Para crear una vista con Handlebars que muestre todos los productos disponibles en tu base de datos de MongoDB, sigue estos pasos:

1. Configuración del Proyecto
Estructura del Proyecto
Asegúrate de que tu proyecto tenga una estructura similar a esta:

bash
Copiar código
/project-root
  /controllers
    productController.js
  /models
    productModel.js
  /routes
    productRoutes.js
  /views
    /layouts
      main.handlebars
    home.handlebars
  /public
    /css
    /js
  app.js
  .env
2. Crear el Modelo de Producto
Crea el modelo de producto en models/productModel.js:

javascript
Copiar código
import mongoose from 'mongoose';

const productSchema = new mongoose.Schema({
  name: { type: String, required: true },
  price: { type: Number, required: true },
  description: { type: String, required: true },
  category: { type: String, required: true }
});

const Product = mongoose.model('Product', productSchema);
export default Product;
3. Crear el Controlador de Producto
Crea el controlador de producto en controllers/productController.js:

javascript
Copiar código
import Product from '../models/productModel.js';

export const getAllProducts = async (req, res) => {
  try {
    const products = await Product.find({});
    res.render('home', { products });
  } catch (error) {
    console.error(error);
    res.status(500).send('Server Error');
  }
};
4. Crear las Rutas de Producto
Configura las rutas de producto en routes/productRoutes.js:

javascript
Copiar código
import express from 'express';
import { getAllProducts } from '../controllers/productController.js';

const router = express.Router();

router.get('/', getAllProducts);

export default router;
5. Configurar Express y Handlebars
Configura tu servidor Express en app.js:

javascript
Copiar código
import express from 'express';
import mongoose from 'mongoose';
import exphbs from 'express-handlebars';
import productRoutes from './routes/productRoutes.js';

const app = express();

// Middleware para manejar JSON
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

// Configuración de Handlebars
app.engine('handlebars', exphbs.engine());
app.set('view engine', 'handlebars');
app.set('views', './views');

// Rutas
app.use('/api/products', productRoutes);

// Conexión a MongoDB
mongoose.connect(process.env.MONGO_URI, {
  useNewUrlParser: true,
  useUnifiedTopology: true
}).then(() => console.log('MongoDB connected'))
  .catch(err => console.log(err));

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => console.log(`Server running on port ${PORT}`));
6. Crear las Vistas con Handlebars
Crea la vista principal en views/home.handlebars:

handlebars
Copiar código
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Home</title>
  <link rel="stylesheet" href="/css/styles.css">
</head>
<body>
  <h1>Productos en Venta</h1>
  <div>
    {{#each products}}
      <div>
        <h2>{{this.name}}</h2>
        <p>{{this.description}}</p>
        <p>{{this.price}}</p>
        <p>{{this.category}}</p>
      </div>
    {{/each}}
  </div>
</body>
</html>